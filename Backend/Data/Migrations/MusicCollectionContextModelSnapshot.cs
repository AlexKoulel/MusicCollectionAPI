// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicCollectionAPI.Backend.Data;


#nullable disable

namespace MusicCollectionAPI.Data.Migrations
{
    [DbContext(typeof(MusicCollectionContext))]
    partial class MusicCollectionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("MusicCollectionAPI.Entities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FormatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FormatId");

                    b.HasIndex("GenreId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("MusicCollectionAPI.Entities.Format", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Formats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Digital"
                        },
                        new
                        {
                            Id = 2,
                            Name = "CD"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Vinyl"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cassette"
                        });
                });

            modelBuilder.Entity("MusicCollectionAPI.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hip-Hop"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Jazz"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ambient"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Electronic"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Classical"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Indie"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Punk"
                        });
                });

            modelBuilder.Entity("MusicCollectionAPI.Entities.Album", b =>
                {
                    b.HasOne("MusicCollectionAPI.Entities.Format", "Format")
                        .WithMany()
                        .HasForeignKey("FormatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicCollectionAPI.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Format");

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
